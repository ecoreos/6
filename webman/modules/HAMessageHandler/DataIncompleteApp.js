/* Copyright (c) 2016 Synology Inc. All rights reserved. */

Ext.namespace("SYNO.SDS.App.DataIncompleteApp");SYNO.SDS.App.DataIncompleteApp.Instance=Ext.extend(SYNO.SDS.AppInstance,{initInstance:function(a){if(!this.win){this.win=new SYNO.SDS.App.DataIncompleteApp.Notification({appInstance:this});this.addInstance(this.win);this.win.setTitle(_T("volume","volume_ha_unbind_notification"))}if("yes"===_D("support_ha","no")){this.sendWebAPI({api:"SYNO.Core.SHA.DSM.Message",version:1,method:"should_alert_unbind",params:{},callback:function(e,c,d,b){if(e){if(true===c.ha_should_alert_passive_node||true===c.ha_should_alert_split_brain){this.win.ha_should_alert_passive_node=c.ha_should_alert_passive_node;this.win.ha_should_alert_split_brain=c.ha_should_alert_split_brain;this.win.show()}}},scope:this})}},onOpen:function(a){this.initInstance(a)}});SYNO.SDS.App.DataIncompleteApp.Notification=Ext.extend(SYNO.SDS.AppWindow,{notifyAdmins:function(){this.sendWebAPI({api:"SYNO.Core.SHA.DSM.Message",version:1,method:"notify_admins",params:{},callback:function(d,b,c,a){},scope:this})},resetDataIncomplete:function(){this.sendWebAPI({api:"SYNO.Core.SHA.DSM.Message",version:1,method:"reset_data_incomplete",params:{},callback:function(d,b,c,a){},scope:this});this.hide()},constructor:function(b){this.owner=b.owner;this.module=b.module;this.panel=this.createPanel();this.form=this.panel.getForm();var a=Ext.apply({title:_T("volume","volume_ha_unbind_notification"),width:430,height:260,minimizable:false,maximizable:false,showHelp:false,resizable:false,cls:"syno-ha-info",items:[this.panel],buttons:[{xtype:"syno_button",text:_T("common","apply"),id:this.confirmButtonID=Ext.id(),handler:this.resetDataIncomplete,scope:this}]},b);SYNO.SDS.App.DataIncompleteApp.Notification.superclass.constructor.call(this,a);this.on("beforeclose",function(c){this.hide();return false});this.on("beforeshow",function(c){this.notifyAdmins();Ext.getCmp(this.confirmButtonID).enable();if(true===this.ha_should_alert_passive_node){Ext.getCmp(this.dataIncompleteLabelID).setValue(String.format(_T("volume","volume_ha_was_passive_node")))}else{if(true===this.ha_should_alert_split_brain){Ext.getCmp(this.dataIncompleteLabelID).setValue(String.format(_T("volume","volume_ha_has_split_brain")))}}return true})},createPanel:function(){var a={border:false,items:[{xtype:"syno_displayfield",id:this.dataIncompleteLabelID=Ext.id()}]};return new Ext.form.FormPanel(a)}});